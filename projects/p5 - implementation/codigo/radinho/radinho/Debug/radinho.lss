
radinho.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000007ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000758  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000007ac  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007dc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000081c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000071c  00000000  00000000  0000083c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000618  00000000  00000000  00000f58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000041c  00000000  00000000  00001570  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000048  00000000  00000000  0000198c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00006cd5  00000000  00000000  000019d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000007b  00000000  00000000  000086a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00008724  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000287d  00000000  00000000  00008734  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 43 00 	jmp	0x86	; 0x86 <__ctors_end>
   4:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
   8:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
   c:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  10:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  14:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  18:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  1c:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  20:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  24:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  28:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  2c:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  30:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  34:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  38:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  3c:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  40:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  44:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  48:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  4c:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  50:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  54:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  58:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  5c:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  60:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  64:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  68:	05 a8       	ldd	r0, Z+53	; 0x35
  6a:	4c cd       	rjmp	.-1384   	; 0xfffffb04 <__eeprom_end+0xff7efb04>
  6c:	b2 d4       	rcall	.+2404   	; 0x9d2 <__stack+0xd3>
  6e:	4e b9       	out	0x0e, r20	; 14
  70:	38 36       	cpi	r19, 0x68	; 104
  72:	a9 02       	muls	r26, r25
  74:	0c 50       	subi	r16, 0x0C	; 12
  76:	b9 91       	ld	r27, Y+
  78:	86 88       	ldd	r8, Z+22	; 0x16
  7a:	08 3c       	cpi	r16, 0xC8	; 200
  7c:	a6 aa       	std	Z+54, r10	; 0x36
  7e:	aa 2a       	or	r10, r26
  80:	be 00       	.word	0x00be	; ????
  82:	00 00       	nop
  84:	80 3f       	cpi	r24, 0xF0	; 240

00000086 <__ctors_end>:
  86:	11 24       	eor	r1, r1
  88:	1f be       	out	0x3f, r1	; 63
  8a:	cf ef       	ldi	r28, 0xFF	; 255
  8c:	d8 e0       	ldi	r29, 0x08	; 8
  8e:	de bf       	out	0x3e, r29	; 62
  90:	cd bf       	out	0x3d, r28	; 61
  92:	0e 94 4f 00 	call	0x9e	; 0x9e <main>
  96:	0c 94 aa 03 	jmp	0x754	; 0x754 <_exit>

0000009a <__bad_interrupt>:
  9a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009e <main>:
#include <math.h>

#define pi 3.1415926535

int main(void)
{
  9e:	cf 92       	push	r12
  a0:	df 92       	push	r13
  a2:	ef 92       	push	r14
  a4:	ff 92       	push	r15
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	cd b7       	in	r28, 0x3d	; 61
  ac:	de b7       	in	r29, 0x3e	; 62
  ae:	6b 97       	sbiw	r28, 0x1b	; 27
  b0:	0f b6       	in	r0, 0x3f	; 63
  b2:	f8 94       	cli
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	0f be       	out	0x3f, r0	; 63
  b8:	cd bf       	out	0x3d, r28	; 61
    //Declaração portas
    DDRD = 0xFF; //PIN D OUT
  ba:	8a e2       	ldi	r24, 0x2A	; 42
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	fc 01       	movw	r30, r24
  c2:	20 83       	st	Z, r18
    ADMUX = 1 << REFS0;
  c4:	8c e7       	ldi	r24, 0x7C	; 124
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	20 e4       	ldi	r18, 0x40	; 64
  ca:	fc 01       	movw	r30, r24
  cc:	20 83       	st	Z, r18
    ADCSRA = 1 << ADEN | 1 << ADSC | 1 << ADATE | 1 << ADPS1| 1 << ADPS0;
  ce:	8a e7       	ldi	r24, 0x7A	; 122
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	23 ee       	ldi	r18, 0xE3	; 227
  d4:	fc 01       	movw	r30, r24
  d6:	20 83       	st	Z, r18
    ADCSRB = 0x00;
  d8:	8b e7       	ldi	r24, 0x7B	; 123
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	fc 01       	movw	r30, r24
  de:	10 82       	st	Z, r1
    DIDR0 = 0x03;
  e0:	8e e7       	ldi	r24, 0x7E	; 126
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	23 e0       	ldi	r18, 0x03	; 3
  e6:	fc 01       	movw	r30, r24
  e8:	20 83       	st	Z, r18

    
    float Ts = 0.0002;
  ea:	87 e1       	ldi	r24, 0x17	; 23
  ec:	97 eb       	ldi	r25, 0xB7	; 183
  ee:	a1 e5       	ldi	r26, 0x51	; 81
  f0:	b9 e3       	ldi	r27, 0x39	; 57
  f2:	8d 83       	std	Y+5, r24	; 0x05
  f4:	9e 83       	std	Y+6, r25	; 0x06
  f6:	af 83       	std	Y+7, r26	; 0x07
  f8:	b8 87       	std	Y+8, r27	; 0x08
    float t = 0;
  fa:	19 82       	std	Y+1, r1	; 0x01
  fc:	1a 82       	std	Y+2, r1	; 0x02
  fe:	1b 82       	std	Y+3, r1	; 0x03
 100:	1c 82       	std	Y+4, r1	; 0x04
    float c = 0;
 102:	19 86       	std	Y+9, r1	; 0x09
 104:	1a 86       	std	Y+10, r1	; 0x0a
 106:	1b 86       	std	Y+11, r1	; 0x0b
 108:	1c 86       	std	Y+12, r1	; 0x0c
	float freq_port = 500;
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	aa ef       	ldi	r26, 0xFA	; 250
 110:	b3 e4       	ldi	r27, 0x43	; 67
 112:	8d 87       	std	Y+13, r24	; 0x0d
 114:	9e 87       	std	Y+14, r25	; 0x0e
 116:	af 87       	std	Y+15, r26	; 0x0f
 118:	b8 8b       	std	Y+16, r27	; 0x10
	
    uint8_t offset = 127;
 11a:	8f e7       	ldi	r24, 0x7F	; 127
 11c:	89 8b       	std	Y+17, r24	; 0x11
	uint8_t Ap = 127;
 11e:	8f e7       	ldi	r24, 0x7F	; 127
 120:	8a 8b       	std	Y+18, r24	; 0x12
    uint8_t output = 0;    
 122:	1b 8a       	std	Y+19, r1	; 0x13
    uint16_t valor_ADC = 0;
 124:	1d 8a       	std	Y+21, r1	; 0x15
 126:	1c 8a       	std	Y+20, r1	; 0x14
	uint16_t pot = 0;
 128:	1f 8a       	std	Y+23, r1	; 0x17
 12a:	1e 8a       	std	Y+22, r1	; 0x16
	
	float portadora = 0;
 12c:	18 8e       	std	Y+24, r1	; 0x18
 12e:	19 8e       	std	Y+25, r1	; 0x19
 130:	1a 8e       	std	Y+26, r1	; 0x1a
 132:	1b 8e       	std	Y+27, r1	; 0x1b
    //Inicialização portas
    PORTB = 0b00000000;
 134:	85 e2       	ldi	r24, 0x25	; 37
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	fc 01       	movw	r30, r24
 13a:	10 82       	st	Z, r1
    
    /* Replace with your application code */
    while (1) 
    {
        ADCSRA |= 1 << ADSC;
 13c:	8a e7       	ldi	r24, 0x7A	; 122
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	2a e7       	ldi	r18, 0x7A	; 122
 142:	30 e0       	ldi	r19, 0x00	; 0
 144:	f9 01       	movw	r30, r18
 146:	20 81       	ld	r18, Z
 148:	20 64       	ori	r18, 0x40	; 64
 14a:	fc 01       	movw	r30, r24
 14c:	20 83       	st	Z, r18
        while (!(ADCSRA & 0b00010000));
 14e:	00 00       	nop
 150:	8a e7       	ldi	r24, 0x7A	; 122
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	fc 01       	movw	r30, r24
 156:	80 81       	ld	r24, Z
 158:	88 2f       	mov	r24, r24
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	80 71       	andi	r24, 0x10	; 16
 15e:	99 27       	eor	r25, r25
 160:	89 2b       	or	r24, r25
 162:	b1 f3       	breq	.-20     	; 0x150 <main+0xb2>
		ADCSRA|=(1<<ADIF);
 164:	8a e7       	ldi	r24, 0x7A	; 122
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	2a e7       	ldi	r18, 0x7A	; 122
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	f9 01       	movw	r30, r18
 16e:	20 81       	ld	r18, Z
 170:	20 61       	ori	r18, 0x10	; 16
 172:	fc 01       	movw	r30, r24
 174:	20 83       	st	Z, r18
        valor_ADC = ADC;
 176:	88 e7       	ldi	r24, 0x78	; 120
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	fc 01       	movw	r30, r24
 17c:	80 81       	ld	r24, Z
 17e:	91 81       	ldd	r25, Z+1	; 0x01
 180:	9d 8b       	std	Y+21, r25	; 0x15
 182:	8c 8b       	std	Y+20, r24	; 0x14
        valor_ADC = valor_ADC/4; //10 bits -> 8 bits
 184:	8c 89       	ldd	r24, Y+20	; 0x14
 186:	9d 89       	ldd	r25, Y+21	; 0x15
 188:	96 95       	lsr	r25
 18a:	87 95       	ror	r24
 18c:	96 95       	lsr	r25
 18e:	87 95       	ror	r24
 190:	9d 8b       	std	Y+21, r25	; 0x15
 192:	8c 8b       	std	Y+20, r24	; 0x14
        
		//MODULAÇÃO AM
		
		portadora = cos(2*pi*freq_port*t);
 194:	2b ed       	ldi	r18, 0xDB	; 219
 196:	3f e0       	ldi	r19, 0x0F	; 15
 198:	49 ec       	ldi	r20, 0xC9	; 201
 19a:	50 e4       	ldi	r21, 0x40	; 64
 19c:	6d 85       	ldd	r22, Y+13	; 0x0d
 19e:	7e 85       	ldd	r23, Y+14	; 0x0e
 1a0:	8f 85       	ldd	r24, Y+15	; 0x0f
 1a2:	98 89       	ldd	r25, Y+16	; 0x10
 1a4:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__mulsf3>
 1a8:	dc 01       	movw	r26, r24
 1aa:	cb 01       	movw	r24, r22
 1ac:	29 81       	ldd	r18, Y+1	; 0x01
 1ae:	3a 81       	ldd	r19, Y+2	; 0x02
 1b0:	4b 81       	ldd	r20, Y+3	; 0x03
 1b2:	5c 81       	ldd	r21, Y+4	; 0x04
 1b4:	bc 01       	movw	r22, r24
 1b6:	cd 01       	movw	r24, r26
 1b8:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__mulsf3>
 1bc:	dc 01       	movw	r26, r24
 1be:	cb 01       	movw	r24, r22
 1c0:	bc 01       	movw	r22, r24
 1c2:	cd 01       	movw	r24, r26
 1c4:	0e 94 ca 01 	call	0x394	; 0x394 <cos>
 1c8:	dc 01       	movw	r26, r24
 1ca:	cb 01       	movw	r24, r22
 1cc:	88 8f       	std	Y+24, r24	; 0x18
 1ce:	99 8f       	std	Y+25, r25	; 0x19
 1d0:	aa 8f       	std	Y+26, r26	; 0x1a
 1d2:	bb 8f       	std	Y+27, r27	; 0x1b
		output =  (0.5*valor_ADC)*portadora + offset;
 1d4:	8c 89       	ldd	r24, Y+20	; 0x14
 1d6:	9d 89       	ldd	r25, Y+21	; 0x15
 1d8:	cc 01       	movw	r24, r24
 1da:	a0 e0       	ldi	r26, 0x00	; 0
 1dc:	b0 e0       	ldi	r27, 0x00	; 0
 1de:	bc 01       	movw	r22, r24
 1e0:	cd 01       	movw	r24, r26
 1e2:	0e 94 fe 01 	call	0x3fc	; 0x3fc <__floatunsisf>
 1e6:	dc 01       	movw	r26, r24
 1e8:	cb 01       	movw	r24, r22
 1ea:	20 e0       	ldi	r18, 0x00	; 0
 1ec:	30 e0       	ldi	r19, 0x00	; 0
 1ee:	40 e0       	ldi	r20, 0x00	; 0
 1f0:	5f e3       	ldi	r21, 0x3F	; 63
 1f2:	bc 01       	movw	r22, r24
 1f4:	cd 01       	movw	r24, r26
 1f6:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__mulsf3>
 1fa:	dc 01       	movw	r26, r24
 1fc:	cb 01       	movw	r24, r22
 1fe:	28 8d       	ldd	r18, Y+24	; 0x18
 200:	39 8d       	ldd	r19, Y+25	; 0x19
 202:	4a 8d       	ldd	r20, Y+26	; 0x1a
 204:	5b 8d       	ldd	r21, Y+27	; 0x1b
 206:	bc 01       	movw	r22, r24
 208:	cd 01       	movw	r24, r26
 20a:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__mulsf3>
 20e:	dc 01       	movw	r26, r24
 210:	cb 01       	movw	r24, r22
 212:	6c 01       	movw	r12, r24
 214:	7d 01       	movw	r14, r26
 216:	89 89       	ldd	r24, Y+17	; 0x11
 218:	88 2f       	mov	r24, r24
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	09 2e       	mov	r0, r25
 21e:	00 0c       	add	r0, r0
 220:	aa 0b       	sbc	r26, r26
 222:	bb 0b       	sbc	r27, r27
 224:	bc 01       	movw	r22, r24
 226:	cd 01       	movw	r24, r26
 228:	0e 94 00 02 	call	0x400	; 0x400 <__floatsisf>
 22c:	dc 01       	movw	r26, r24
 22e:	cb 01       	movw	r24, r22
 230:	9c 01       	movw	r18, r24
 232:	ad 01       	movw	r20, r26
 234:	c7 01       	movw	r24, r14
 236:	b6 01       	movw	r22, r12
 238:	0e 94 5e 01 	call	0x2bc	; 0x2bc <__addsf3>
 23c:	dc 01       	movw	r26, r24
 23e:	cb 01       	movw	r24, r22
 240:	bc 01       	movw	r22, r24
 242:	cd 01       	movw	r24, r26
 244:	0e 94 cf 01 	call	0x39e	; 0x39e <__fixunssfsi>
 248:	dc 01       	movw	r26, r24
 24a:	cb 01       	movw	r24, r22
 24c:	8b 8b       	std	Y+19, r24	; 0x13
			else{
				output =  Ap*cos(2*pi*t*freq_port)+offset;;
			}
		}*/
		
		PORTD = output;
 24e:	8b e2       	ldi	r24, 0x2B	; 43
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	2b 89       	ldd	r18, Y+19	; 0x13
 254:	fc 01       	movw	r30, r24
 256:	20 83       	st	Z, r18
		
		c=freq_port*t;
 258:	29 81       	ldd	r18, Y+1	; 0x01
 25a:	3a 81       	ldd	r19, Y+2	; 0x02
 25c:	4b 81       	ldd	r20, Y+3	; 0x03
 25e:	5c 81       	ldd	r21, Y+4	; 0x04
 260:	6d 85       	ldd	r22, Y+13	; 0x0d
 262:	7e 85       	ldd	r23, Y+14	; 0x0e
 264:	8f 85       	ldd	r24, Y+15	; 0x0f
 266:	98 89       	ldd	r25, Y+16	; 0x10
 268:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__mulsf3>
 26c:	dc 01       	movw	r26, r24
 26e:	cb 01       	movw	r24, r22
 270:	89 87       	std	Y+9, r24	; 0x09
 272:	9a 87       	std	Y+10, r25	; 0x0a
 274:	ab 87       	std	Y+11, r26	; 0x0b
 276:	bc 87       	std	Y+12, r27	; 0x0c
        t += Ts;
 278:	2d 81       	ldd	r18, Y+5	; 0x05
 27a:	3e 81       	ldd	r19, Y+6	; 0x06
 27c:	4f 81       	ldd	r20, Y+7	; 0x07
 27e:	58 85       	ldd	r21, Y+8	; 0x08
 280:	69 81       	ldd	r22, Y+1	; 0x01
 282:	7a 81       	ldd	r23, Y+2	; 0x02
 284:	8b 81       	ldd	r24, Y+3	; 0x03
 286:	9c 81       	ldd	r25, Y+4	; 0x04
 288:	0e 94 5e 01 	call	0x2bc	; 0x2bc <__addsf3>
 28c:	dc 01       	movw	r26, r24
 28e:	cb 01       	movw	r24, r22
 290:	89 83       	std	Y+1, r24	; 0x01
 292:	9a 83       	std	Y+2, r25	; 0x02
 294:	ab 83       	std	Y+3, r26	; 0x03
 296:	bc 83       	std	Y+4, r27	; 0x04
        if (c>= 1){
 298:	20 e0       	ldi	r18, 0x00	; 0
 29a:	30 e0       	ldi	r19, 0x00	; 0
 29c:	40 e8       	ldi	r20, 0x80	; 128
 29e:	5f e3       	ldi	r21, 0x3F	; 63
 2a0:	69 85       	ldd	r22, Y+9	; 0x09
 2a2:	7a 85       	ldd	r23, Y+10	; 0x0a
 2a4:	8b 85       	ldd	r24, Y+11	; 0x0b
 2a6:	9c 85       	ldd	r25, Y+12	; 0x0c
 2a8:	0e 94 cb 02 	call	0x596	; 0x596 <__gesf2>
 2ac:	88 23       	and	r24, r24
 2ae:	24 f0       	brlt	.+8      	; 0x2b8 <main+0x21a>
			t= 0;
 2b0:	19 82       	std	Y+1, r1	; 0x01
 2b2:	1a 82       	std	Y+2, r1	; 0x02
 2b4:	1b 82       	std	Y+3, r1	; 0x03
 2b6:	1c 82       	std	Y+4, r1	; 0x04
		}
        
    }
 2b8:	41 cf       	rjmp	.-382    	; 0x13c <main+0x9e>

000002ba <__subsf3>:
 2ba:	50 58       	subi	r21, 0x80	; 128

000002bc <__addsf3>:
 2bc:	bb 27       	eor	r27, r27
 2be:	aa 27       	eor	r26, r26
 2c0:	0e 94 75 01 	call	0x2ea	; 0x2ea <__addsf3x>
 2c4:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__fp_round>
 2c8:	0e 94 44 02 	call	0x488	; 0x488 <__fp_pscA>
 2cc:	38 f0       	brcs	.+14     	; 0x2dc <__addsf3+0x20>
 2ce:	0e 94 4b 02 	call	0x496	; 0x496 <__fp_pscB>
 2d2:	20 f0       	brcs	.+8      	; 0x2dc <__addsf3+0x20>
 2d4:	39 f4       	brne	.+14     	; 0x2e4 <__addsf3+0x28>
 2d6:	9f 3f       	cpi	r25, 0xFF	; 255
 2d8:	19 f4       	brne	.+6      	; 0x2e0 <__addsf3+0x24>
 2da:	26 f4       	brtc	.+8      	; 0x2e4 <__addsf3+0x28>
 2dc:	0c 94 41 02 	jmp	0x482	; 0x482 <__fp_nan>
 2e0:	0e f4       	brtc	.+2      	; 0x2e4 <__addsf3+0x28>
 2e2:	e0 95       	com	r30
 2e4:	e7 fb       	bst	r30, 7
 2e6:	0c 94 3b 02 	jmp	0x476	; 0x476 <__fp_inf>

000002ea <__addsf3x>:
 2ea:	e9 2f       	mov	r30, r25
 2ec:	0e 94 a2 02 	call	0x544	; 0x544 <__fp_split3>
 2f0:	58 f3       	brcs	.-42     	; 0x2c8 <__addsf3+0xc>
 2f2:	ba 17       	cp	r27, r26
 2f4:	62 07       	cpc	r22, r18
 2f6:	73 07       	cpc	r23, r19
 2f8:	84 07       	cpc	r24, r20
 2fa:	95 07       	cpc	r25, r21
 2fc:	20 f0       	brcs	.+8      	; 0x306 <__addsf3x+0x1c>
 2fe:	79 f4       	brne	.+30     	; 0x31e <__addsf3x+0x34>
 300:	a6 f5       	brtc	.+104    	; 0x36a <__addsf3x+0x80>
 302:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_zero>
 306:	0e f4       	brtc	.+2      	; 0x30a <__addsf3x+0x20>
 308:	e0 95       	com	r30
 30a:	0b 2e       	mov	r0, r27
 30c:	ba 2f       	mov	r27, r26
 30e:	a0 2d       	mov	r26, r0
 310:	0b 01       	movw	r0, r22
 312:	b9 01       	movw	r22, r18
 314:	90 01       	movw	r18, r0
 316:	0c 01       	movw	r0, r24
 318:	ca 01       	movw	r24, r20
 31a:	a0 01       	movw	r20, r0
 31c:	11 24       	eor	r1, r1
 31e:	ff 27       	eor	r31, r31
 320:	59 1b       	sub	r21, r25
 322:	99 f0       	breq	.+38     	; 0x34a <__addsf3x+0x60>
 324:	59 3f       	cpi	r21, 0xF9	; 249
 326:	50 f4       	brcc	.+20     	; 0x33c <__addsf3x+0x52>
 328:	50 3e       	cpi	r21, 0xE0	; 224
 32a:	68 f1       	brcs	.+90     	; 0x386 <__addsf3x+0x9c>
 32c:	1a 16       	cp	r1, r26
 32e:	f0 40       	sbci	r31, 0x00	; 0
 330:	a2 2f       	mov	r26, r18
 332:	23 2f       	mov	r18, r19
 334:	34 2f       	mov	r19, r20
 336:	44 27       	eor	r20, r20
 338:	58 5f       	subi	r21, 0xF8	; 248
 33a:	f3 cf       	rjmp	.-26     	; 0x322 <__addsf3x+0x38>
 33c:	46 95       	lsr	r20
 33e:	37 95       	ror	r19
 340:	27 95       	ror	r18
 342:	a7 95       	ror	r26
 344:	f0 40       	sbci	r31, 0x00	; 0
 346:	53 95       	inc	r21
 348:	c9 f7       	brne	.-14     	; 0x33c <__addsf3x+0x52>
 34a:	7e f4       	brtc	.+30     	; 0x36a <__addsf3x+0x80>
 34c:	1f 16       	cp	r1, r31
 34e:	ba 0b       	sbc	r27, r26
 350:	62 0b       	sbc	r22, r18
 352:	73 0b       	sbc	r23, r19
 354:	84 0b       	sbc	r24, r20
 356:	ba f0       	brmi	.+46     	; 0x386 <__addsf3x+0x9c>
 358:	91 50       	subi	r25, 0x01	; 1
 35a:	a1 f0       	breq	.+40     	; 0x384 <__addsf3x+0x9a>
 35c:	ff 0f       	add	r31, r31
 35e:	bb 1f       	adc	r27, r27
 360:	66 1f       	adc	r22, r22
 362:	77 1f       	adc	r23, r23
 364:	88 1f       	adc	r24, r24
 366:	c2 f7       	brpl	.-16     	; 0x358 <__addsf3x+0x6e>
 368:	0e c0       	rjmp	.+28     	; 0x386 <__addsf3x+0x9c>
 36a:	ba 0f       	add	r27, r26
 36c:	62 1f       	adc	r22, r18
 36e:	73 1f       	adc	r23, r19
 370:	84 1f       	adc	r24, r20
 372:	48 f4       	brcc	.+18     	; 0x386 <__addsf3x+0x9c>
 374:	87 95       	ror	r24
 376:	77 95       	ror	r23
 378:	67 95       	ror	r22
 37a:	b7 95       	ror	r27
 37c:	f7 95       	ror	r31
 37e:	9e 3f       	cpi	r25, 0xFE	; 254
 380:	08 f0       	brcs	.+2      	; 0x384 <__addsf3x+0x9a>
 382:	b0 cf       	rjmp	.-160    	; 0x2e4 <__addsf3+0x28>
 384:	93 95       	inc	r25
 386:	88 0f       	add	r24, r24
 388:	08 f0       	brcs	.+2      	; 0x38c <__addsf3x+0xa2>
 38a:	99 27       	eor	r25, r25
 38c:	ee 0f       	add	r30, r30
 38e:	97 95       	ror	r25
 390:	87 95       	ror	r24
 392:	08 95       	ret

00000394 <cos>:
 394:	0e 94 54 02 	call	0x4a8	; 0x4a8 <__fp_rempio2>
 398:	e3 95       	inc	r30
 39a:	0c 94 8e 02 	jmp	0x51c	; 0x51c <__fp_sinus>

0000039e <__fixunssfsi>:
 39e:	0e 94 aa 02 	call	0x554	; 0x554 <__fp_splitA>
 3a2:	88 f0       	brcs	.+34     	; 0x3c6 <__fixunssfsi+0x28>
 3a4:	9f 57       	subi	r25, 0x7F	; 127
 3a6:	98 f0       	brcs	.+38     	; 0x3ce <__fixunssfsi+0x30>
 3a8:	b9 2f       	mov	r27, r25
 3aa:	99 27       	eor	r25, r25
 3ac:	b7 51       	subi	r27, 0x17	; 23
 3ae:	b0 f0       	brcs	.+44     	; 0x3dc <__fixunssfsi+0x3e>
 3b0:	e1 f0       	breq	.+56     	; 0x3ea <__fixunssfsi+0x4c>
 3b2:	66 0f       	add	r22, r22
 3b4:	77 1f       	adc	r23, r23
 3b6:	88 1f       	adc	r24, r24
 3b8:	99 1f       	adc	r25, r25
 3ba:	1a f0       	brmi	.+6      	; 0x3c2 <__fixunssfsi+0x24>
 3bc:	ba 95       	dec	r27
 3be:	c9 f7       	brne	.-14     	; 0x3b2 <__fixunssfsi+0x14>
 3c0:	14 c0       	rjmp	.+40     	; 0x3ea <__fixunssfsi+0x4c>
 3c2:	b1 30       	cpi	r27, 0x01	; 1
 3c4:	91 f0       	breq	.+36     	; 0x3ea <__fixunssfsi+0x4c>
 3c6:	0e 94 c4 02 	call	0x588	; 0x588 <__fp_zero>
 3ca:	b1 e0       	ldi	r27, 0x01	; 1
 3cc:	08 95       	ret
 3ce:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_zero>
 3d2:	67 2f       	mov	r22, r23
 3d4:	78 2f       	mov	r23, r24
 3d6:	88 27       	eor	r24, r24
 3d8:	b8 5f       	subi	r27, 0xF8	; 248
 3da:	39 f0       	breq	.+14     	; 0x3ea <__fixunssfsi+0x4c>
 3dc:	b9 3f       	cpi	r27, 0xF9	; 249
 3de:	cc f3       	brlt	.-14     	; 0x3d2 <__fixunssfsi+0x34>
 3e0:	86 95       	lsr	r24
 3e2:	77 95       	ror	r23
 3e4:	67 95       	ror	r22
 3e6:	b3 95       	inc	r27
 3e8:	d9 f7       	brne	.-10     	; 0x3e0 <__fixunssfsi+0x42>
 3ea:	3e f4       	brtc	.+14     	; 0x3fa <__fixunssfsi+0x5c>
 3ec:	90 95       	com	r25
 3ee:	80 95       	com	r24
 3f0:	70 95       	com	r23
 3f2:	61 95       	neg	r22
 3f4:	7f 4f       	sbci	r23, 0xFF	; 255
 3f6:	8f 4f       	sbci	r24, 0xFF	; 255
 3f8:	9f 4f       	sbci	r25, 0xFF	; 255
 3fa:	08 95       	ret

000003fc <__floatunsisf>:
 3fc:	e8 94       	clt
 3fe:	09 c0       	rjmp	.+18     	; 0x412 <__floatsisf+0x12>

00000400 <__floatsisf>:
 400:	97 fb       	bst	r25, 7
 402:	3e f4       	brtc	.+14     	; 0x412 <__floatsisf+0x12>
 404:	90 95       	com	r25
 406:	80 95       	com	r24
 408:	70 95       	com	r23
 40a:	61 95       	neg	r22
 40c:	7f 4f       	sbci	r23, 0xFF	; 255
 40e:	8f 4f       	sbci	r24, 0xFF	; 255
 410:	9f 4f       	sbci	r25, 0xFF	; 255
 412:	99 23       	and	r25, r25
 414:	a9 f0       	breq	.+42     	; 0x440 <__floatsisf+0x40>
 416:	f9 2f       	mov	r31, r25
 418:	96 e9       	ldi	r25, 0x96	; 150
 41a:	bb 27       	eor	r27, r27
 41c:	93 95       	inc	r25
 41e:	f6 95       	lsr	r31
 420:	87 95       	ror	r24
 422:	77 95       	ror	r23
 424:	67 95       	ror	r22
 426:	b7 95       	ror	r27
 428:	f1 11       	cpse	r31, r1
 42a:	f8 cf       	rjmp	.-16     	; 0x41c <__floatsisf+0x1c>
 42c:	fa f4       	brpl	.+62     	; 0x46c <__floatsisf+0x6c>
 42e:	bb 0f       	add	r27, r27
 430:	11 f4       	brne	.+4      	; 0x436 <__floatsisf+0x36>
 432:	60 ff       	sbrs	r22, 0
 434:	1b c0       	rjmp	.+54     	; 0x46c <__floatsisf+0x6c>
 436:	6f 5f       	subi	r22, 0xFF	; 255
 438:	7f 4f       	sbci	r23, 0xFF	; 255
 43a:	8f 4f       	sbci	r24, 0xFF	; 255
 43c:	9f 4f       	sbci	r25, 0xFF	; 255
 43e:	16 c0       	rjmp	.+44     	; 0x46c <__floatsisf+0x6c>
 440:	88 23       	and	r24, r24
 442:	11 f0       	breq	.+4      	; 0x448 <__floatsisf+0x48>
 444:	96 e9       	ldi	r25, 0x96	; 150
 446:	11 c0       	rjmp	.+34     	; 0x46a <__floatsisf+0x6a>
 448:	77 23       	and	r23, r23
 44a:	21 f0       	breq	.+8      	; 0x454 <__floatsisf+0x54>
 44c:	9e e8       	ldi	r25, 0x8E	; 142
 44e:	87 2f       	mov	r24, r23
 450:	76 2f       	mov	r23, r22
 452:	05 c0       	rjmp	.+10     	; 0x45e <__floatsisf+0x5e>
 454:	66 23       	and	r22, r22
 456:	71 f0       	breq	.+28     	; 0x474 <__floatsisf+0x74>
 458:	96 e8       	ldi	r25, 0x86	; 134
 45a:	86 2f       	mov	r24, r22
 45c:	70 e0       	ldi	r23, 0x00	; 0
 45e:	60 e0       	ldi	r22, 0x00	; 0
 460:	2a f0       	brmi	.+10     	; 0x46c <__floatsisf+0x6c>
 462:	9a 95       	dec	r25
 464:	66 0f       	add	r22, r22
 466:	77 1f       	adc	r23, r23
 468:	88 1f       	adc	r24, r24
 46a:	da f7       	brpl	.-10     	; 0x462 <__floatsisf+0x62>
 46c:	88 0f       	add	r24, r24
 46e:	96 95       	lsr	r25
 470:	87 95       	ror	r24
 472:	97 f9       	bld	r25, 7
 474:	08 95       	ret

00000476 <__fp_inf>:
 476:	97 f9       	bld	r25, 7
 478:	9f 67       	ori	r25, 0x7F	; 127
 47a:	80 e8       	ldi	r24, 0x80	; 128
 47c:	70 e0       	ldi	r23, 0x00	; 0
 47e:	60 e0       	ldi	r22, 0x00	; 0
 480:	08 95       	ret

00000482 <__fp_nan>:
 482:	9f ef       	ldi	r25, 0xFF	; 255
 484:	80 ec       	ldi	r24, 0xC0	; 192
 486:	08 95       	ret

00000488 <__fp_pscA>:
 488:	00 24       	eor	r0, r0
 48a:	0a 94       	dec	r0
 48c:	16 16       	cp	r1, r22
 48e:	17 06       	cpc	r1, r23
 490:	18 06       	cpc	r1, r24
 492:	09 06       	cpc	r0, r25
 494:	08 95       	ret

00000496 <__fp_pscB>:
 496:	00 24       	eor	r0, r0
 498:	0a 94       	dec	r0
 49a:	12 16       	cp	r1, r18
 49c:	13 06       	cpc	r1, r19
 49e:	14 06       	cpc	r1, r20
 4a0:	05 06       	cpc	r0, r21
 4a2:	08 95       	ret
 4a4:	0c 94 41 02 	jmp	0x482	; 0x482 <__fp_nan>

000004a8 <__fp_rempio2>:
 4a8:	0e 94 aa 02 	call	0x554	; 0x554 <__fp_splitA>
 4ac:	d8 f3       	brcs	.-10     	; 0x4a4 <__fp_pscB+0xe>
 4ae:	e8 94       	clt
 4b0:	e0 e0       	ldi	r30, 0x00	; 0
 4b2:	bb 27       	eor	r27, r27
 4b4:	9f 57       	subi	r25, 0x7F	; 127
 4b6:	f0 f0       	brcs	.+60     	; 0x4f4 <__fp_rempio2+0x4c>
 4b8:	2a ed       	ldi	r18, 0xDA	; 218
 4ba:	3f e0       	ldi	r19, 0x0F	; 15
 4bc:	49 ec       	ldi	r20, 0xC9	; 201
 4be:	06 c0       	rjmp	.+12     	; 0x4cc <__fp_rempio2+0x24>
 4c0:	ee 0f       	add	r30, r30
 4c2:	bb 0f       	add	r27, r27
 4c4:	66 1f       	adc	r22, r22
 4c6:	77 1f       	adc	r23, r23
 4c8:	88 1f       	adc	r24, r24
 4ca:	28 f0       	brcs	.+10     	; 0x4d6 <__fp_rempio2+0x2e>
 4cc:	b2 3a       	cpi	r27, 0xA2	; 162
 4ce:	62 07       	cpc	r22, r18
 4d0:	73 07       	cpc	r23, r19
 4d2:	84 07       	cpc	r24, r20
 4d4:	28 f0       	brcs	.+10     	; 0x4e0 <__fp_rempio2+0x38>
 4d6:	b2 5a       	subi	r27, 0xA2	; 162
 4d8:	62 0b       	sbc	r22, r18
 4da:	73 0b       	sbc	r23, r19
 4dc:	84 0b       	sbc	r24, r20
 4de:	e3 95       	inc	r30
 4e0:	9a 95       	dec	r25
 4e2:	72 f7       	brpl	.-36     	; 0x4c0 <__fp_rempio2+0x18>
 4e4:	80 38       	cpi	r24, 0x80	; 128
 4e6:	30 f4       	brcc	.+12     	; 0x4f4 <__fp_rempio2+0x4c>
 4e8:	9a 95       	dec	r25
 4ea:	bb 0f       	add	r27, r27
 4ec:	66 1f       	adc	r22, r22
 4ee:	77 1f       	adc	r23, r23
 4f0:	88 1f       	adc	r24, r24
 4f2:	d2 f7       	brpl	.-12     	; 0x4e8 <__fp_rempio2+0x40>
 4f4:	90 48       	sbci	r25, 0x80	; 128
 4f6:	0c 94 63 03 	jmp	0x6c6	; 0x6c6 <__fp_mpack_finite>

000004fa <__fp_round>:
 4fa:	09 2e       	mov	r0, r25
 4fc:	03 94       	inc	r0
 4fe:	00 0c       	add	r0, r0
 500:	11 f4       	brne	.+4      	; 0x506 <__fp_round+0xc>
 502:	88 23       	and	r24, r24
 504:	52 f0       	brmi	.+20     	; 0x51a <__fp_round+0x20>
 506:	bb 0f       	add	r27, r27
 508:	40 f4       	brcc	.+16     	; 0x51a <__fp_round+0x20>
 50a:	bf 2b       	or	r27, r31
 50c:	11 f4       	brne	.+4      	; 0x512 <__fp_round+0x18>
 50e:	60 ff       	sbrs	r22, 0
 510:	04 c0       	rjmp	.+8      	; 0x51a <__fp_round+0x20>
 512:	6f 5f       	subi	r22, 0xFF	; 255
 514:	7f 4f       	sbci	r23, 0xFF	; 255
 516:	8f 4f       	sbci	r24, 0xFF	; 255
 518:	9f 4f       	sbci	r25, 0xFF	; 255
 51a:	08 95       	ret

0000051c <__fp_sinus>:
 51c:	ef 93       	push	r30
 51e:	e0 ff       	sbrs	r30, 0
 520:	07 c0       	rjmp	.+14     	; 0x530 <__fp_sinus+0x14>
 522:	a2 ea       	ldi	r26, 0xA2	; 162
 524:	2a ed       	ldi	r18, 0xDA	; 218
 526:	3f e0       	ldi	r19, 0x0F	; 15
 528:	49 ec       	ldi	r20, 0xC9	; 201
 52a:	5f eb       	ldi	r21, 0xBF	; 191
 52c:	0e 94 75 01 	call	0x2ea	; 0x2ea <__addsf3x>
 530:	0e 94 7d 02 	call	0x4fa	; 0x4fa <__fp_round>
 534:	0f 90       	pop	r0
 536:	03 94       	inc	r0
 538:	01 fc       	sbrc	r0, 1
 53a:	90 58       	subi	r25, 0x80	; 128
 53c:	e8 e6       	ldi	r30, 0x68	; 104
 53e:	f0 e0       	ldi	r31, 0x00	; 0
 540:	0c 94 6f 03 	jmp	0x6de	; 0x6de <__fp_powsodd>

00000544 <__fp_split3>:
 544:	57 fd       	sbrc	r21, 7
 546:	90 58       	subi	r25, 0x80	; 128
 548:	44 0f       	add	r20, r20
 54a:	55 1f       	adc	r21, r21
 54c:	59 f0       	breq	.+22     	; 0x564 <__fp_splitA+0x10>
 54e:	5f 3f       	cpi	r21, 0xFF	; 255
 550:	71 f0       	breq	.+28     	; 0x56e <__fp_splitA+0x1a>
 552:	47 95       	ror	r20

00000554 <__fp_splitA>:
 554:	88 0f       	add	r24, r24
 556:	97 fb       	bst	r25, 7
 558:	99 1f       	adc	r25, r25
 55a:	61 f0       	breq	.+24     	; 0x574 <__fp_splitA+0x20>
 55c:	9f 3f       	cpi	r25, 0xFF	; 255
 55e:	79 f0       	breq	.+30     	; 0x57e <__fp_splitA+0x2a>
 560:	87 95       	ror	r24
 562:	08 95       	ret
 564:	12 16       	cp	r1, r18
 566:	13 06       	cpc	r1, r19
 568:	14 06       	cpc	r1, r20
 56a:	55 1f       	adc	r21, r21
 56c:	f2 cf       	rjmp	.-28     	; 0x552 <__fp_split3+0xe>
 56e:	46 95       	lsr	r20
 570:	f1 df       	rcall	.-30     	; 0x554 <__fp_splitA>
 572:	08 c0       	rjmp	.+16     	; 0x584 <__fp_splitA+0x30>
 574:	16 16       	cp	r1, r22
 576:	17 06       	cpc	r1, r23
 578:	18 06       	cpc	r1, r24
 57a:	99 1f       	adc	r25, r25
 57c:	f1 cf       	rjmp	.-30     	; 0x560 <__fp_splitA+0xc>
 57e:	86 95       	lsr	r24
 580:	71 05       	cpc	r23, r1
 582:	61 05       	cpc	r22, r1
 584:	08 94       	sec
 586:	08 95       	ret

00000588 <__fp_zero>:
 588:	e8 94       	clt

0000058a <__fp_szero>:
 58a:	bb 27       	eor	r27, r27
 58c:	66 27       	eor	r22, r22
 58e:	77 27       	eor	r23, r23
 590:	cb 01       	movw	r24, r22
 592:	97 f9       	bld	r25, 7
 594:	08 95       	ret

00000596 <__gesf2>:
 596:	0e 94 3d 03 	call	0x67a	; 0x67a <__fp_cmp>
 59a:	08 f4       	brcc	.+2      	; 0x59e <__gesf2+0x8>
 59c:	8f ef       	ldi	r24, 0xFF	; 255
 59e:	08 95       	ret

000005a0 <__mulsf3>:
 5a0:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__mulsf3x>
 5a4:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__fp_round>
 5a8:	0e 94 44 02 	call	0x488	; 0x488 <__fp_pscA>
 5ac:	38 f0       	brcs	.+14     	; 0x5bc <__mulsf3+0x1c>
 5ae:	0e 94 4b 02 	call	0x496	; 0x496 <__fp_pscB>
 5b2:	20 f0       	brcs	.+8      	; 0x5bc <__mulsf3+0x1c>
 5b4:	95 23       	and	r25, r21
 5b6:	11 f0       	breq	.+4      	; 0x5bc <__mulsf3+0x1c>
 5b8:	0c 94 3b 02 	jmp	0x476	; 0x476 <__fp_inf>
 5bc:	0c 94 41 02 	jmp	0x482	; 0x482 <__fp_nan>
 5c0:	11 24       	eor	r1, r1
 5c2:	0c 94 c5 02 	jmp	0x58a	; 0x58a <__fp_szero>

000005c6 <__mulsf3x>:
 5c6:	0e 94 a2 02 	call	0x544	; 0x544 <__fp_split3>
 5ca:	70 f3       	brcs	.-36     	; 0x5a8 <__mulsf3+0x8>

000005cc <__mulsf3_pse>:
 5cc:	95 9f       	mul	r25, r21
 5ce:	c1 f3       	breq	.-16     	; 0x5c0 <__mulsf3+0x20>
 5d0:	95 0f       	add	r25, r21
 5d2:	50 e0       	ldi	r21, 0x00	; 0
 5d4:	55 1f       	adc	r21, r21
 5d6:	62 9f       	mul	r22, r18
 5d8:	f0 01       	movw	r30, r0
 5da:	72 9f       	mul	r23, r18
 5dc:	bb 27       	eor	r27, r27
 5de:	f0 0d       	add	r31, r0
 5e0:	b1 1d       	adc	r27, r1
 5e2:	63 9f       	mul	r22, r19
 5e4:	aa 27       	eor	r26, r26
 5e6:	f0 0d       	add	r31, r0
 5e8:	b1 1d       	adc	r27, r1
 5ea:	aa 1f       	adc	r26, r26
 5ec:	64 9f       	mul	r22, r20
 5ee:	66 27       	eor	r22, r22
 5f0:	b0 0d       	add	r27, r0
 5f2:	a1 1d       	adc	r26, r1
 5f4:	66 1f       	adc	r22, r22
 5f6:	82 9f       	mul	r24, r18
 5f8:	22 27       	eor	r18, r18
 5fa:	b0 0d       	add	r27, r0
 5fc:	a1 1d       	adc	r26, r1
 5fe:	62 1f       	adc	r22, r18
 600:	73 9f       	mul	r23, r19
 602:	b0 0d       	add	r27, r0
 604:	a1 1d       	adc	r26, r1
 606:	62 1f       	adc	r22, r18
 608:	83 9f       	mul	r24, r19
 60a:	a0 0d       	add	r26, r0
 60c:	61 1d       	adc	r22, r1
 60e:	22 1f       	adc	r18, r18
 610:	74 9f       	mul	r23, r20
 612:	33 27       	eor	r19, r19
 614:	a0 0d       	add	r26, r0
 616:	61 1d       	adc	r22, r1
 618:	23 1f       	adc	r18, r19
 61a:	84 9f       	mul	r24, r20
 61c:	60 0d       	add	r22, r0
 61e:	21 1d       	adc	r18, r1
 620:	82 2f       	mov	r24, r18
 622:	76 2f       	mov	r23, r22
 624:	6a 2f       	mov	r22, r26
 626:	11 24       	eor	r1, r1
 628:	9f 57       	subi	r25, 0x7F	; 127
 62a:	50 40       	sbci	r21, 0x00	; 0
 62c:	9a f0       	brmi	.+38     	; 0x654 <__mulsf3_pse+0x88>
 62e:	f1 f0       	breq	.+60     	; 0x66c <__mulsf3_pse+0xa0>
 630:	88 23       	and	r24, r24
 632:	4a f0       	brmi	.+18     	; 0x646 <__mulsf3_pse+0x7a>
 634:	ee 0f       	add	r30, r30
 636:	ff 1f       	adc	r31, r31
 638:	bb 1f       	adc	r27, r27
 63a:	66 1f       	adc	r22, r22
 63c:	77 1f       	adc	r23, r23
 63e:	88 1f       	adc	r24, r24
 640:	91 50       	subi	r25, 0x01	; 1
 642:	50 40       	sbci	r21, 0x00	; 0
 644:	a9 f7       	brne	.-22     	; 0x630 <__mulsf3_pse+0x64>
 646:	9e 3f       	cpi	r25, 0xFE	; 254
 648:	51 05       	cpc	r21, r1
 64a:	80 f0       	brcs	.+32     	; 0x66c <__mulsf3_pse+0xa0>
 64c:	0c 94 3b 02 	jmp	0x476	; 0x476 <__fp_inf>
 650:	0c 94 c5 02 	jmp	0x58a	; 0x58a <__fp_szero>
 654:	5f 3f       	cpi	r21, 0xFF	; 255
 656:	e4 f3       	brlt	.-8      	; 0x650 <__mulsf3_pse+0x84>
 658:	98 3e       	cpi	r25, 0xE8	; 232
 65a:	d4 f3       	brlt	.-12     	; 0x650 <__mulsf3_pse+0x84>
 65c:	86 95       	lsr	r24
 65e:	77 95       	ror	r23
 660:	67 95       	ror	r22
 662:	b7 95       	ror	r27
 664:	f7 95       	ror	r31
 666:	e7 95       	ror	r30
 668:	9f 5f       	subi	r25, 0xFF	; 255
 66a:	c1 f7       	brne	.-16     	; 0x65c <__mulsf3_pse+0x90>
 66c:	fe 2b       	or	r31, r30
 66e:	88 0f       	add	r24, r24
 670:	91 1d       	adc	r25, r1
 672:	96 95       	lsr	r25
 674:	87 95       	ror	r24
 676:	97 f9       	bld	r25, 7
 678:	08 95       	ret

0000067a <__fp_cmp>:
 67a:	99 0f       	add	r25, r25
 67c:	00 08       	sbc	r0, r0
 67e:	55 0f       	add	r21, r21
 680:	aa 0b       	sbc	r26, r26
 682:	e0 e8       	ldi	r30, 0x80	; 128
 684:	fe ef       	ldi	r31, 0xFE	; 254
 686:	16 16       	cp	r1, r22
 688:	17 06       	cpc	r1, r23
 68a:	e8 07       	cpc	r30, r24
 68c:	f9 07       	cpc	r31, r25
 68e:	c0 f0       	brcs	.+48     	; 0x6c0 <__fp_cmp+0x46>
 690:	12 16       	cp	r1, r18
 692:	13 06       	cpc	r1, r19
 694:	e4 07       	cpc	r30, r20
 696:	f5 07       	cpc	r31, r21
 698:	98 f0       	brcs	.+38     	; 0x6c0 <__fp_cmp+0x46>
 69a:	62 1b       	sub	r22, r18
 69c:	73 0b       	sbc	r23, r19
 69e:	84 0b       	sbc	r24, r20
 6a0:	95 0b       	sbc	r25, r21
 6a2:	39 f4       	brne	.+14     	; 0x6b2 <__fp_cmp+0x38>
 6a4:	0a 26       	eor	r0, r26
 6a6:	61 f0       	breq	.+24     	; 0x6c0 <__fp_cmp+0x46>
 6a8:	23 2b       	or	r18, r19
 6aa:	24 2b       	or	r18, r20
 6ac:	25 2b       	or	r18, r21
 6ae:	21 f4       	brne	.+8      	; 0x6b8 <__fp_cmp+0x3e>
 6b0:	08 95       	ret
 6b2:	0a 26       	eor	r0, r26
 6b4:	09 f4       	brne	.+2      	; 0x6b8 <__fp_cmp+0x3e>
 6b6:	a1 40       	sbci	r26, 0x01	; 1
 6b8:	a6 95       	lsr	r26
 6ba:	8f ef       	ldi	r24, 0xFF	; 255
 6bc:	81 1d       	adc	r24, r1
 6be:	81 1d       	adc	r24, r1
 6c0:	08 95       	ret

000006c2 <__fp_mpack>:
 6c2:	9f 3f       	cpi	r25, 0xFF	; 255
 6c4:	31 f0       	breq	.+12     	; 0x6d2 <__fp_mpack_finite+0xc>

000006c6 <__fp_mpack_finite>:
 6c6:	91 50       	subi	r25, 0x01	; 1
 6c8:	20 f4       	brcc	.+8      	; 0x6d2 <__fp_mpack_finite+0xc>
 6ca:	87 95       	ror	r24
 6cc:	77 95       	ror	r23
 6ce:	67 95       	ror	r22
 6d0:	b7 95       	ror	r27
 6d2:	88 0f       	add	r24, r24
 6d4:	91 1d       	adc	r25, r1
 6d6:	96 95       	lsr	r25
 6d8:	87 95       	ror	r24
 6da:	97 f9       	bld	r25, 7
 6dc:	08 95       	ret

000006de <__fp_powsodd>:
 6de:	9f 93       	push	r25
 6e0:	8f 93       	push	r24
 6e2:	7f 93       	push	r23
 6e4:	6f 93       	push	r22
 6e6:	ff 93       	push	r31
 6e8:	ef 93       	push	r30
 6ea:	9b 01       	movw	r18, r22
 6ec:	ac 01       	movw	r20, r24
 6ee:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__mulsf3>
 6f2:	ef 91       	pop	r30
 6f4:	ff 91       	pop	r31
 6f6:	0e 94 83 03 	call	0x706	; 0x706 <__fp_powser>
 6fa:	2f 91       	pop	r18
 6fc:	3f 91       	pop	r19
 6fe:	4f 91       	pop	r20
 700:	5f 91       	pop	r21
 702:	0c 94 d0 02 	jmp	0x5a0	; 0x5a0 <__mulsf3>

00000706 <__fp_powser>:
 706:	df 93       	push	r29
 708:	cf 93       	push	r28
 70a:	1f 93       	push	r17
 70c:	0f 93       	push	r16
 70e:	ff 92       	push	r15
 710:	ef 92       	push	r14
 712:	df 92       	push	r13
 714:	7b 01       	movw	r14, r22
 716:	8c 01       	movw	r16, r24
 718:	68 94       	set
 71a:	06 c0       	rjmp	.+12     	; 0x728 <__fp_powser+0x22>
 71c:	da 2e       	mov	r13, r26
 71e:	ef 01       	movw	r28, r30
 720:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__mulsf3x>
 724:	fe 01       	movw	r30, r28
 726:	e8 94       	clt
 728:	a5 91       	lpm	r26, Z+
 72a:	25 91       	lpm	r18, Z+
 72c:	35 91       	lpm	r19, Z+
 72e:	45 91       	lpm	r20, Z+
 730:	55 91       	lpm	r21, Z+
 732:	a6 f3       	brts	.-24     	; 0x71c <__fp_powser+0x16>
 734:	ef 01       	movw	r28, r30
 736:	0e 94 75 01 	call	0x2ea	; 0x2ea <__addsf3x>
 73a:	fe 01       	movw	r30, r28
 73c:	97 01       	movw	r18, r14
 73e:	a8 01       	movw	r20, r16
 740:	da 94       	dec	r13
 742:	69 f7       	brne	.-38     	; 0x71e <__fp_powser+0x18>
 744:	df 90       	pop	r13
 746:	ef 90       	pop	r14
 748:	ff 90       	pop	r15
 74a:	0f 91       	pop	r16
 74c:	1f 91       	pop	r17
 74e:	cf 91       	pop	r28
 750:	df 91       	pop	r29
 752:	08 95       	ret

00000754 <_exit>:
 754:	f8 94       	cli

00000756 <__stop_program>:
 756:	ff cf       	rjmp	.-2      	; 0x756 <__stop_program>
